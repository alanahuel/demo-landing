---
globs: ["src/components/**/*.astro", "src/layouts/**/*.astro"]
---
# REGLA: Lista de Verificación de Usabilidad (Heurísticas de Nielsen)

Actúa como un evaluador de usabilidad experto. Al generar o modificar cualquier componente de UI, valida tu propuesta contra cada una de las siguientes 10 heurísticas de Jakob Nielsen.[1]

1.  **Visibilidad del estado del sistema:** ¿El usuario sabe lo que está pasando? Para acciones que no son instantáneas, implementa feedback inmediato (indicadores de carga, spinners, mensajes de estado).[5, 1]

2.  **Relación entre sistema y mundo real:** ¿El lenguaje es claro y familiar? Usa terminología del usuario, no jerga técnica. Los iconos deben ser convencionales.[5, 1]

3.  **Control y libertad del usuario:** ¿Puede el usuario deshacer un error? Proporciona "salidas de emergencia" claras como botones de "Cancelar" o "Atrás". Las acciones destructivas (ej. eliminar) deben pedir confirmación.[5, 1]

4.  **Consistencia y estándares:** ¿El componente se comporta como se espera? Sigue las convenciones de la plataforma y del resto de la aplicación. Un botón de "Guardar" debe verse y funcionar igual en todas partes.[5, 1]

5.  **Prevención de errores:** ¿El diseño ayuda a evitar errores? Desactiva los botones de "Enviar" hasta que los campos requeridos estén completos. Usa menús desplegables en lugar de texto libre cuando las opciones son limitadas.[5, 1]

6.  **Reconocimiento en lugar de recuerdo:** ¿Se minimiza la carga de memoria? Las etiquetas de los campos deben ser siempre visibles. Muestra información contextual en lugar de obligar al usuario a recordarla de otra pantalla.[5, 1]

7.  **Flexibilidad y eficiencia de uso:** ¿Sirve para novatos y expertos? Considera añadir atajos (ej. shortcuts de teclado) para usuarios avanzados sin complicar la interfaz para los nuevos.[5, 1]

8.  **Diseño estético y minimalista:** ¿Hay información irrelevante? Cada elemento en la pantalla debe tener un propósito. Elimina el "ruido" visual que no apoya directamente las tareas del usuario.[5, 1]

9.  **Ayudar a recuperarse de errores:** ¿Los mensajes de error son útiles? Deben expresarse en lenguaje sencillo, indicar con precisión el problema (ej. "El correo ya está en uso") y sugerir una solución (ej. "¿Desea iniciar sesión?").[5, 1]

10. **Ayuda y documentación:** ¿La ayuda es fácil de encontrar? Si una función es compleja, proporciona ayuda contextual (tooltips) o un enlace a una sección de FAQ.[5, 1]