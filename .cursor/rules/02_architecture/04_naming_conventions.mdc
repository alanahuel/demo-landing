---
alwaysApply: true
---

# DIRECTIVAS DE NOMENCLATURA

[cite_start]La elección de nombres es una de las tareas más importantes[cite: 333]. [cite_start]El código debe ser autodocumentado[cite: 334].

1.  [cite_start]**Revelar la Intención**: El nombre de una variable, función o clase debe responder a qué hace, por qué existe y cómo se usa[cite: 335]. [cite_start]Si un nombre necesita un comentario, es un mal nombre[cite: 336].
    * [cite_start]**Mal**: `int d;` [cite: 337]
    * [cite_start]**Bien**: `int elapsedTimeInDays;` [cite: 338]

2.  [cite_start]**Evitar Desinformación y Abreviaturas**: No uses nombres ambiguos o que se parezcan a palabras clave[cite: 340]. [cite_start]Usa nombres pronunciables y que se puedan buscar fácilmente[cite: 341]. [cite_start]Reemplaza siempre los "números mágicos" con constantes nombradas[cite: 342].

3.  **Consistencia Semántica**:
    * [cite_start]**Clases/Objetos**: Usa sustantivos o frases nominales (ej: `User`, `AccountSettings`)[cite: 345].
    * [cite_start]**Funciones/Métodos**: Usa verbos o frases verbales que describan la acción (ej: `calculateTotal`, `saveUser`)[cite: 345].
    * [cite_start]**Una Palabra por Concepto**: Elige una palabra para un concepto y úsala de forma consistente (ej: usa siempre `get`, no una mezcla de `get`, `fetch` y `retrieve`)[cite: 351, 352].