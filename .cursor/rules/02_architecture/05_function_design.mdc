---
globs: ["src/**/*.{js,ts,py,java,cs}"]
---

# DISEÑO DE FUNCIONES

Las funciones son los verbos de nuestro lenguaje de programación. Deben ser precisas y predecibles[cite: 355].

1.  **Pequeñas y Enfocadas**: Las funciones deben ser muy pequeñas[cite: 356]. La segunda regla es que deben ser aún más pequeñas[cite: 357]. Si una función es larga, es una señal de que está haciendo demasiadas cosas[cite: 357].

2.  **Principio de Responsabilidad Única (SRP)**: Una función debe hacer UNA SOLA COSA, hacerla bien y ser lo único que haga[cite: 359]. Si puedes describir la función usando la palabra "y", probablemente está haciendo más de una cosa.

3.  **Mínimo Número de Argumentos**: El número ideal de argumentos es cero, uno o dos[cite: 369]. Evita las funciones con tres o más argumentos[cite: 370]. Si necesitas pasar muchos datos, agrúpalos en un objeto (Introduce Parameter Object)[cite: 370]. Los argumentos booleanos (`flags`) son una señal de que la función debería dividirse en dos[cite: 370].

4.  **Prefiere Polimorfismo a `switch`**: Las sentencias `switch` repetitivas son un "code smell"[cite: 371]. Considera reemplazarlas con un diseño polimórfico (subclases o implementaciones de una interfaz) para seguir el Principio Abierto/Cerrado[cite: 371].